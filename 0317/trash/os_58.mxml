<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml"
                layout="absolute"
                xmlns:flex="main.flex.*"
                width="100%"
                height="100%">
<mx:Style source="assets/css/Styles.css"/>
    <mx:Canvas xmlns="*"
               xmlns:mx="http://www.adobe.com/2006/mxml"
               xmlns:os="http://openscales.org"
               width="100%"
               creationComplete="initMap();"
               height="100%">

        <os:Map id="fxmap"
                centerLonLat="108.36178,22.81471"
                height="100%"
                width="100%">
            <os:ScaleLine/>
            <os:WMSC name="nnfx_layergoup_7"
                     url="http://localhost:8080/geoserver/wms"
                     layers="nnfx_layergroup_shp"
                     format="image/png8"
                     isBaseLayer="true"
                     tiled="true"
                     tileHeight="300"
                     tileWidth="300"
                     resolutions="0.125,0.0625,0.03125,0.015625,0.0078125,0.00390625,0.001953125,0.00098765125,0.000598820625,0.0002994103125,0.00014970515625,0.000074852578125,0.0000374262890625,0.00001871314453125,0.000009356572265625,0.0000046782861328125,0.00000233914306640625"
                     projection="EPSG:4326"/>                     
            <os:MousePosition x="10"
                              y="{height-20}"
                              displayProjection="EPSG:4326"/>
            <os:DragHandler/>
            <os:WheelHandler/>
            <os:ControlPanel id="capabilitiesPanel"
                             title="地图导航"
                             horizontalAlign="center"
                             x="{10}"
                             y="{10}">
                <os:PanComponent map="{map}"/>
                <mx:HBox width="100%"
                         paddingLeft="5"
                         paddingRight="5">
                    <os:ZoomComponent map="{map}"/>
                    <mx:Spacer width="100%"/>
                    <os:ZoomBoxComponent map="{map}"
                                         width="32"
                                         height="32"/>
                </mx:HBox>
                <mx:Button label="站点查询" click="wxf_searchStation(fxmap.map)"/>
                <mx:Button label="图层控制" click="wxf_layerManager(fxmap.map)"/>
            </os:ControlPanel>
        </os:Map>
        <mx:Script>
            <![CDATA[
            	import com.vistech.LayerKML;
                import org.openscales.core.popup.Anchored;
                import org.openscales.core.events.FeatureEvent;
                import com.vistech.ST_STBPRP_R_search;
                import com.vistech.ST_STBPRP_B_search;
                import com.vistech.SuperPanel;
                import mx.rpc.http.mxml.HTTPService;
                import mx.events.CloseEvent;
                import mx.rpc.events.FaultEvent;
                import mx.rpc.events.ResultEvent;
                import mx.controls.Alert;
                import mx.controls.Image;

                import org.openscales.core.feature.Marker;
                import org.openscales.core.geometry.LineString;
                import org.openscales.core.feature.LineStringFeature;
                import org.openscales.core.style.symbolizer.PolygonSymbolizer;
                import org.openscales.core.geometry.Polygon;
                import org.openscales.core.feature.PolygonFeature;
                import org.openscales.core.geometry.LinearRing;
                import org.openscales.core.style.stroke.Stroke;
                import org.openscales.core.style.fill.SolidFill;
                import org.openscales.core.style.marker.WellKnownMarker;
                import org.openscales.core.style.symbolizer.PointSymbolizer;
                import org.openscales.core.style.Rule;
                import org.openscales.core.style.Style;
                import org.openscales.core.layer.FeatureLayer;
                import org.openscales.core.feature.Feature;
                import org.openscales.core.Map;
                import org.openscales.core.Trace;
                import org.openscales.core.geometry.Point;
                import org.openscales.core.feature.PointFeature;

                private var popup:Anchored;

                [Bindable]
                private var map:Map=null;
                [Bindable]
                public var displayTrace:Boolean=false;
                [Bindable]
                public var displayFirebugTrace:Boolean=false;

                /**
                 * 为站点查询提供功能
                 * */
                public function wxf_searchStation(map:Map):void
                {
                    var app:Application=this;

                    //添加一个漂浮框
                    var window:SuperPanel=new SuperPanel();
                    window.allowClose=true;
                    window.allowDrag=true;
                    window.allowMinimize=true;
                    window.width=300;
                    window.height=300;
                    window.x=(Capabilities.screenResolutionX - app.contentMouseX) > 330 ? app.contentMouseX : app.contentMouseX - 330;
                    window.y=(Capabilities.screenResolutionY - app.contentMouseY) > 330 ? app.contentMouseY : app.contentMouseY - 330;
                    window.title="站点查询";
                    window.addEventListener(CloseEvent.CLOSE, function()
                        {
                            if (searchKMLLayers != null)
                            {
                                map.removeLayer(searchKMLLayers.mainlayer);
                                searchKMLLayers=null;
                            }
                            app.removeChild(window);
                        });
                    window.name="windowSearchStation";
                    addChild(window);

                    //读取 appURL 路径
                    var appURL:String="http://localhost:8003/app.php";


                    var st_stbprp_b_searchCanvas:ST_STBPRP_B_search=new ST_STBPRP_B_search();
                    st_stbprp_b_searchCanvas.app=this;
                    st_stbprp_b_searchCanvas.addEventListener("clickSearchBut", function()
                        {
                            searchAndDrawKml(appURL, st_stbprp_b_searchCanvas.getSearchConditions(), "windowSearchStation");
                        })
                    st_stbprp_b_searchCanvas.addEventListener("clickSearchWithDataBut", function()
                        {
                            window.allowClose=false;
                            var st_stbprp_r:ST_STBPRP_R_search=new ST_STBPRP_R_search();

                            //添加一个漂浮框
                            var window1:SuperPanel=new SuperPanel();
                            window1.allowClose=true;
                            window1.allowDrag=true;
                            window1.allowMinimize=true;
                            window1.width=300;
                            window1.height=200;
                            window1.x=(Capabilities.screenResolutionX - app.contentMouseX) > 350 ? app.contentMouseX : app.contentMouseX - 350;
                            window1.y=(Capabilities.screenResolutionY - app.contentMouseY) > 250 ? app.contentMouseY : app.contentMouseY - 250;
                            window1.title="站点查询";
                            window1.addEventListener(CloseEvent.CLOSE, function()
                                {
                                    window.allowClose=true;
                                    app.removeChild(window1);
                                });
                            window1.name="windowSearchStationWithData";
                            addChild(window1);
                            window1.addChild(st_stbprp_r);
                            st_stbprp_r.addEventListener("clickSearchBut", function()
                                {
                                    var conditionsWithData:Dictionary=st_stbprp_r.getSearchConditions(); //将数据结合控件的查询条件和这个控件的查询条件结合起来
                                    var conditionsThis:Dictionary=st_stbprp_b_searchCanvas.getSearchConditions();
                                    for (var key:String in conditionsWithData)
                                    {
                                        conditionsThis[key]=conditionsWithData[key];
                                    }
                                    searchAndDrawKml(appURL, conditionsThis, "windowSearchStationWithData");
                                })
                        });
                    window.addChild(st_stbprp_b_searchCanvas);
                }

                var searchKMLLayers:LayerKML=null;
                public function searchAndDrawKml(appURL:String, conditions:Dictionary, domName:String):void
                {
                    var app:Application=this;
                    if (appURL == null)
                    {
                        Alert.show("尚未读取配置文件,请等待")
                        return;
                    }
                    if (searchKMLLayers != null)
                    {
                       
                        map.removeLayer(searchKMLLayers.mainlayer);

                    }
                    else
                    {
                        searchKMLLayers=new LayerKML(map,"new layer");
                    }
                    var httpservice:HTTPService=new HTTPService();
                    httpservice.method="POST";
                    httpservice.request=(conditions as Object);
                    httpservice.url=appURL + "?controller=st_stbprp_b&action=readKml";
                    httpservice.addEventListener(ResultEvent.RESULT, function(event:ResultEvent):void
                        {
                            if (domName == "windowSearchStation")
                            {
                                ((app.getChildByName("windowSearchStation") as SuperPanel).getChildAt(0) as ST_STBPRP_B_search).httpServiceStopped();
                            }
                            else
                            {
                                ((app.getChildByName("windowSearchStationWithData") as SuperPanel).getChildAt(0) as ST_STBPRP_R_search).httpServiceStopped();
                            }

                            searchKMLLayers.drawKML(event);


                        });
                    httpservice.addEventListener(FaultEvent.FAULT, function(event:FaultEvent):void
                        {
                            if (domName == "windowSearchStation")
                            {
                                ((app.getChildByName("windowSearchStation") as SuperPanel).getChildAt(0) as ST_STBPRP_R_search).httpServiceStopped();
                            }
                            else
                            {
                                ((app.getChildByName("windowSearchStationWithData") as SuperPanel).getChildAt(0) as ST_STBPRP_R_search).httpServiceStopped();
                            }
                            Alert.show("无法读取数据");
                        });
                    httpservice.send();
                }

                private function initMap():void
                {
                    Trace.useFireBugConsole=displayFirebugTrace;
                    map=fxmap.map;
                    map.zoom=6;
                    map.addEventListener(FeatureEvent.FEATURE_OVER, onFeatureOver);
                }
                private function onFeatureOver(event:FeatureEvent):void
                {
                    if (popup)
                    {
                        popup.destroy();
                    }
                    popup=null;
                    popup=new Anchored();
                    popup.feature=event.feature;
                    var content:String=event.feature.data.description;
                    content="\n" + content;
                    popup.htmlText=content;
                    popup.size.h=80;
                    popup.size.w=150;
                    if(event.feature.data.description!=null)map.addPopup(popup, false);
                }

                /**
                 * 产生一个漂浮框,实现对 地图层的控制
                 * 主要控制 堤防 桥梁 抢险段 等
                 * 线条数据
                 * */
                public function wxf_layerManager(map:Map):void
                {
                	/*
                    //添加一个漂浮框
                    if (!getChildByName("windowLayerManager"))
                    {
                        var windowLayerManager:SuperPanel=new SuperPanel();
                        windowLayerManager.visible=true;
                        windowLayerManager.name="windowLayerManager";
                        windowLayerManager.allowClose=true;
                        windowLayerManager.allowDrag=true;
                        windowLayerManager.allowMinimize=true;
                        windowLayerManager.width=350;
                        windowLayerManager.height=300;
                        windowLayerManager.title="图层叠加";
                        windowLayerManager.addEventListener(CloseEvent.CLOSE, function()
                            {
                                windowLayerManager.visible=false;
                            });
                        (this as Application).addChild(windowLayerManager);
                        //给漂浮框中添加 层控制器
                        var layerManagerCanvas:layerManager=new layerManager();
                        layerManagerCanvas.setMap(map);
                        windowLayerManager.addChild(layerManagerCanvas);
                    }
                    else
                    {
                        (getChildByName("windowLayerManager") as SuperPanel).visible=true;
                    }
                    
                    */
                }
            ]]>
        </mx:Script>
    </mx:Canvas>
</mx:Application>
